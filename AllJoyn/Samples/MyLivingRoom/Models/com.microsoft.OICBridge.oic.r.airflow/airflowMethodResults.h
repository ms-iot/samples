//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace microsoft { namespace OICBridge { namespace oic { namespace r { namespace airflow {

ref class airflowConsumer;

public ref class airflowJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property airflowConsumer^ Consumer
    {
        airflowConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ airflowConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    airflowConsumer^ m_consumer;
};

public ref class airflowGetDirectionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Platform::String^ Direction
    {
        Platform::String^ get() { return m_value; }
    internal:
        void set(_In_ Platform::String^ value) { m_value = value; }
    }

    static airflowGetDirectionResult^ CreateSuccessResult(_In_ Platform::String^ value)
    {
        auto result = ref new airflowGetDirectionResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Direction = value;
        return result;
    }

    static airflowGetDirectionResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowGetDirectionResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    Platform::String^ m_value;
};

public ref class airflowSetDirectionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static airflowSetDirectionResult^ CreateSuccessResult()
    {
        auto result = ref new airflowSetDirectionResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        return result;
    }

    static airflowSetDirectionResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowSetDirectionResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
};

public ref class airflowGetRangeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Platform::String^ Range
    {
        Platform::String^ get() { return m_value; }
    internal:
        void set(_In_ Platform::String^ value) { m_value = value; }
    }

    static airflowGetRangeResult^ CreateSuccessResult(_In_ Platform::String^ value)
    {
        auto result = ref new airflowGetRangeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Range = value;
        return result;
    }

    static airflowGetRangeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowGetRangeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    Platform::String^ m_value;
};

public ref class airflowSetRangeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static airflowSetRangeResult^ CreateSuccessResult()
    {
        auto result = ref new airflowSetRangeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        return result;
    }

    static airflowSetRangeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowSetRangeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
};

public ref class airflowGetSpeedResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property int64 Speed
    {
        int64 get() { return m_value; }
    internal:
        void set(_In_ int64 value) { m_value = value; }
    }

    static airflowGetSpeedResult^ CreateSuccessResult(_In_ int64 value)
    {
        auto result = ref new airflowGetSpeedResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Speed = value;
        return result;
    }

    static airflowGetSpeedResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowGetSpeedResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    int64 m_value;
};

public ref class airflowSetSpeedResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static airflowSetSpeedResult^ CreateSuccessResult()
    {
        auto result = ref new airflowSetSpeedResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        return result;
    }

    static airflowSetSpeedResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new airflowSetSpeedResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
};

} } } } } } 
