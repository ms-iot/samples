//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace alljoyn { namespace ControlPanel { namespace Property {

ref class PropertySignals;

public interface class IPropertySignals
{
    event Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyMetadataChangedReceivedEventArgs^>^ MetadataChangedReceived;
    event Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyValueChangedReceivedEventArgs^>^ ValueChangedReceived;
};

public ref class PropertySignals sealed : [Windows::Foundation::Metadata::Default] IPropertySignals
{
public:
    // Calling this method will send the MetadataChanged signal to every member of the session.
    void MetadataChanged();

    // This event fires whenever the MetadataChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyMetadataChangedReceivedEventArgs^>^ MetadataChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyMetadataChangedReceivedEventArgs^>^ handler) 
        { 
            return _MetadataChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PropertySignals^>(sender), safe_cast<PropertyMetadataChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _MetadataChangedReceived -= token; 
        } 
    internal: 
        void raise(PropertySignals^ sender, PropertyMetadataChangedReceivedEventArgs^ args) 
        { 
            _MetadataChangedReceived(sender, args);
        } 
    }

    // Calling this method will send the ValueChanged signal to every member of the session.
    void ValueChanged();

    // This event fires whenever the ValueChanged signal is sent by another member of the session.
    virtual event Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyValueChangedReceivedEventArgs^>^ ValueChangedReceived 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<PropertySignals^, PropertyValueChangedReceivedEventArgs^>^ handler) 
        { 
            return _ValueChangedReceived += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<PropertySignals^>(sender), safe_cast<PropertyValueChangedReceivedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _ValueChangedReceived -= token; 
        } 
    internal: 
        void raise(PropertySignals^ sender, PropertyValueChangedReceivedEventArgs^ args) 
        { 
            _ValueChangedReceived(sender, args);
        } 
    }

internal:
    void Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId);
    void CallMetadataChangedReceived(_In_ PropertySignals^ sender, _In_ PropertyMetadataChangedReceivedEventArgs^ args);
    void CallValueChangedReceived(_In_ PropertySignals^ sender, _In_ PropertyValueChangedReceivedEventArgs^ args);

private:
    alljoyn_busobject m_busObject;
    alljoyn_sessionid m_sessionId;

    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _MetadataChangedReceived;
    virtual event Windows::Foundation::EventHandler<Platform::Object^>^ _ValueChangedReceived;

    alljoyn_interfacedescription_member m_memberMetadataChanged;
    alljoyn_interfacedescription_member m_memberValueChanged;
};

} } } } 
