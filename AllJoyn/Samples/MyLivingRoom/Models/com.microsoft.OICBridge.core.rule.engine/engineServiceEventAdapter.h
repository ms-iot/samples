//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace microsoft { namespace OICBridge { namespace core { namespace rule { namespace engine {

// This class, and the associated EventArgs classes, exist for the benefit of JavaScript developers who
// do not have the ability to implement IengineService. Instead, engineServiceEventAdapter
// provides the Interface implementation and exposes a set of compatible events to the developer.
public ref class engineServiceEventAdapter sealed : [Windows::Foundation::Metadata::Default] IengineService
{
public:
    // Method Invocation Events
    // Property Read Events
    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetHomeAwayRequestedEventArgs^>^ GetHomeAwayRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetHomeAwayRequestedEventArgs^>^ handler) 
        { 
            return _GetHomeAwayRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineGetHomeAwayRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetHomeAwayRequested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineGetHomeAwayRequestedEventArgs^ args) 
        { 
            _GetHomeAwayRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetStartStopRequestedEventArgs^>^ GetStartStopRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetStartStopRequestedEventArgs^>^ handler) 
        { 
            return _GetStartStopRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineGetStartStopRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetStartStopRequested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineGetStartStopRequestedEventArgs^ args) 
        { 
            _GetStartStopRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetStatus2RequestedEventArgs^>^ GetStatus2Requested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineGetStatus2RequestedEventArgs^>^ handler) 
        { 
            return _GetStatus2Requested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineGetStatus2RequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetStatus2Requested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineGetStatus2RequestedEventArgs^ args) 
        { 
            _GetStatus2Requested(sender, args);
        } 
    }

    // Property Write Events
    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetHomeAwayRequestedEventArgs^>^ SetHomeAwayRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetHomeAwayRequestedEventArgs^>^ handler) 
        { 
            return _SetHomeAwayRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineSetHomeAwayRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetHomeAwayRequested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineSetHomeAwayRequestedEventArgs^ args) 
        { 
            _SetHomeAwayRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetStartStopRequestedEventArgs^>^ SetStartStopRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetStartStopRequestedEventArgs^>^ handler) 
        { 
            return _SetStartStopRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineSetStartStopRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetStartStopRequested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineSetStartStopRequestedEventArgs^ args) 
        { 
            _SetStartStopRequested(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetStatus2RequestedEventArgs^>^ SetStatus2Requested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<engineServiceEventAdapter^, engineSetStatus2RequestedEventArgs^>^ handler) 
        { 
            return _SetStatus2Requested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<engineServiceEventAdapter^>(sender), safe_cast<engineSetStatus2RequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetStatus2Requested -= token; 
        } 
    internal: 
        void raise(engineServiceEventAdapter^ sender, engineSetStatus2RequestedEventArgs^ args) 
        { 
            _SetStatus2Requested(sender, args);
        } 
    }

    // IengineService Implementation

    virtual Windows::Foundation::IAsyncOperation<engineGetHomeAwayResult^>^ GetHomeAwayAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<engineGetStartStopResult^>^ GetStartStopAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<engineGetStatus2Result^>^ GetStatus2Async(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);

    virtual Windows::Foundation::IAsyncOperation<engineSetHomeAwayResult^>^ SetHomeAwayAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ bool value);
    virtual Windows::Foundation::IAsyncOperation<engineSetStartStopResult^>^ SetStartStopAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ bool value);
    virtual Windows::Foundation::IAsyncOperation<engineSetStatus2Result^>^ SetStatus2Async(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ value);

private:
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetHomeAwayRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetStartStopRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetStatus2Requested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetHomeAwayRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetStartStopRequested;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetStatus2Requested;
};

} } } } } } 
