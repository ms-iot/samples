//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace com { namespace microsoft { namespace OICBridge { namespace oic { namespace r { namespace audio {

ref class audioConsumer;

public ref class audioJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property audioConsumer^ Consumer
    {
        audioConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ audioConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    audioConsumer^ m_consumer;
};

public ref class audioGetMuteResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property bool Mute
    {
        bool get() { return m_value; }
    internal:
        void set(_In_ bool value) { m_value = value; }
    }

    static audioGetMuteResult^ CreateSuccessResult(_In_ bool value)
    {
        auto result = ref new audioGetMuteResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Mute = value;
        return result;
    }

    static audioGetMuteResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new audioGetMuteResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    bool m_value;
};

public ref class audioSetMuteResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static audioSetMuteResult^ CreateSuccessResult()
    {
        auto result = ref new audioSetMuteResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        return result;
    }

    static audioSetMuteResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new audioSetMuteResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
};

public ref class audioGetVolumeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property int64 Volume
    {
        int64 get() { return m_value; }
    internal:
        void set(_In_ int64 value) { m_value = value; }
    }

    static audioGetVolumeResult^ CreateSuccessResult(_In_ int64 value)
    {
        auto result = ref new audioGetVolumeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Volume = value;
        return result;
    }

    static audioGetVolumeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new audioGetVolumeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    int64 m_value;
};

public ref class audioSetVolumeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    static audioSetVolumeResult^ CreateSuccessResult()
    {
        auto result = ref new audioSetVolumeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        return result;
    }

    static audioSetVolumeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new audioSetVolumeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
};

} } } } } } 
