#******************************************************************
#
# Copyright 2014 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

##
# Examples build script
##
Import('env')
# Add third party libraries
lib_env = env.Clone()
SConscript(env.get('SRC_DIR') + '/resource/third_party_libs.scons', 'lib_env')

examples_env = lib_env.Clone()

######################################################################
# Build flags
######################################################################
examples_env.AppendUnique(CPPPATH = [
		'../include/',
		'../csdk/stack/include',
		'../csdk/ocrandom/include',
		'../csdk/logger/include',
		'../oc_logger/include'
		])

target_os = env.get('TARGET_OS')
if target_os not in ['windows', 'winrt']:
	examples_env.AppendUnique(CXXFLAGS = ['-std=c++0x', '-Wall', '-pthread'])

	# Note: 'pthread' is in libc for android. On other platform, if use
	# new gcc(>4.9?) it isn't required, otherwise, it's required
	if target_os != 'android':
		examples_env.AppendUnique(LIBS = ['-lpthread'])

examples_env.AppendUnique(LIBPATH = [env.get('BUILD_DIR')])
examples_env.AppendUnique(RPATH = [env.get('BUILD_DIR')])
examples_env.PrependUnique(LIBS = ['oc', 'octbstack', 'oc_logger', 'connectivity_abstraction', 'coap'])
if env.get('SECURED') == '1':
    examples_env.AppendUnique(LIBS = ['tinydtls'])

if target_os == 'android':
	examples_env.AppendUnique(CXXFLAGS = ['-frtti', '-fexceptions'])
	examples_env.AppendUnique(LIBS = ['gnustl_shared'])

	if not env.get('RELEASE'):
		examples_env.AppendUnique(LIBS = ['log'])

if target_os in ['darwin', 'ios']:
	examples_env.AppendUnique(CPPDEFINES = ['_DARWIN_C_SOURCE'])

######################################################################
# Source files and Targets
######################################################################
simpleserver = examples_env.Program('simpleserver', 'simpleserver.cpp')
simpleclient = examples_env.Program('simpleclient', 'simpleclient.cpp')
simpleserverHQ = examples_env.Program('simpleserverHQ', 'simpleserverHQ.cpp')
simpleclientHQ = examples_env.Program('simpleclientHQ', 'simpleclientHQ.cpp')
fridgeserver = examples_env.Program('fridgeserver', 'fridgeserver.cpp')
fridgeclient = examples_env.Program('fridgeclient', 'fridgeclient.cpp')
presenceserver = examples_env.Program('presenceserver', 'presenceserver.cpp')
presenceclient = examples_env.Program('presenceclient', 'presenceclient.cpp')
simpleclientserver = examples_env.Program('simpleclientserver', 'simpleclientserver.cpp')
roomserver = examples_env.Program('roomserver', 'roomserver.cpp')
roomclient = examples_env.Program('roomclient', 'roomclient.cpp')
garageserver = examples_env.Program('garageserver', 'garageserver.cpp')
garageclient = examples_env.Program('garageclient', 'garageclient.cpp')
groupserver = examples_env.Program('groupserver', 'groupserver.cpp')
groupclient = examples_env.Program('groupclient', 'groupclient.cpp')
lightserver = examples_env.Program('lightserver', 'lightserver.cpp')
devicediscoveryserver = examples_env.Program('devicediscoveryserver', 'devicediscoveryserver.cpp')
devicediscoveryclient = examples_env.Program('devicediscoveryclient', 'devicediscoveryclient.cpp')
threadingsample = examples_env.Program('threadingsample', 'threadingsample.cpp')

Alias("examples", [simpleserver, simpleclient,
		simpleserverHQ, simpleclientHQ,
		fridgeserver, fridgeclient,
		presenceserver, presenceclient,
		simpleclientserver, roomserver, roomclient, garageserver,
		garageclient,
		groupserver, groupclient,
		lightserver,
		devicediscoveryserver, devicediscoveryclient,
		threadingsample
     ])
env.AppendTarget('examples')

src_dir = examples_env.get('SRC_DIR')
svr_db_src_dir = src_dir + '/resource/examples/'
svr_db_build_dir = env.get('BUILD_DIR') +'/resource/examples/'
examples_env.Alias("install", examples_env.Install( svr_db_build_dir,
                svr_db_src_dir + 'oic_svr_db_client.json'))
examples_env.Alias("install", examples_env.Install( svr_db_build_dir,
                svr_db_src_dir + 'oic_svr_db_server.json'))
