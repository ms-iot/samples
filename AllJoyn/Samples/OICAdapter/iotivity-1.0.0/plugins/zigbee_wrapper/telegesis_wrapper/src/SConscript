#******************************************************************
#
# Copyright 2015 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
##
# Plugin Interface build script
##

import os.path

Import('env')

target_os = env.get('TARGET_OS')
src_dir = env.get('SRC_DIR')
tw_path = os.path.join(src_dir, 'plugins')

#####################################################################
# Source files and Target(s)
######################################################################

print"Reading Telegesis Wrapper (TW) script"

env.AppendUnique(CPPPATH = [ os.path.join(tw_path, 'include'),
                             os.path.join(tw_path, 'include', 'internal'),
                             os.path.join(src_dir, 'resource', 'oc_logger', 'include'),
                             os.path.join(src_dir, 'resource', 'csdk', 'stack', 'include'),
                             os.path.join(src_dir, 'resource', 'csdk', 'logger', 'include'),
                             os.path.join(src_dir, 'resource', 'c_common', 'oic_string', 'include'),
                             os.path.join(tw_path, 'zigbee_wrapper', 'telegesis_wrapper', 'include')
                             ])

if target_os not in ['arduino', 'windows', 'winrt']:
	env.AppendUnique(CPPDEFINES = ['WITH_POSIX'])

if target_os in ['darwin','ios']:
	env.AppendUnique(CPPDEFINES = ['_DARWIN_C_SOURCE'])

tw_src = [
         os.path.join(src_dir, 'resource', 'c_common', 'oic_string', 'src', 'oic_string.c'),
         os.path.join(src_dir, 'resource', 'csdk', 'logger', 'src', 'logger.c'),
         'twsocketlist.c',
         'telegesis_socket.c',
         'telegesis_wrapper.c'
         ]

env.AppendUnique(TW_SRC = tw_src)

if target_os in ['android', 'tizen']:
	calib = env.SharedLibrary('telegesis_wrapper', env.get('TW_SRC'))
else:
	calib = env.StaticLibrary('telegesis_wrapper', env.get('TW_SRC'))
env.InstallTarget(calib, 'libtelegesis_wrapper')
env.UserInstallTargetLib(calib, 'libtelegesis_wrapper')
