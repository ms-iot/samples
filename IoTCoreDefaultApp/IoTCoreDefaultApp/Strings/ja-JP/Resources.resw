<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IoTCoreHeaderText" xml:space="preserve">
    <value>Windows 10 IoT Core</value>
    <comment>The Operating System Name</comment>
  </data>
  <data name="GenericBoardName" xml:space="preserve">
    <value>IoTCore ボード</value>
    <comment>A generic board name</comment>
  </data>
  <data name="MainPageDeviceNameText" xml:space="preserve">
    <value>デバイス名</value>
    <comment>Field label</comment>
  </data>
  <data name="MainPageNetworkText" xml:space="preserve">
    <value>ネットワーク</value>
    <comment>Field label</comment>
  </data>
  <data name="MBMName" xml:space="preserve">
    <value>MinnowBoard Max</value>
    <comment>Board name</comment>
  </data>
  <data name="RestartText" xml:space="preserve">
    <value>再起動</value>
    <comment>Restart entry in the shutdown menu</comment>
  </data>
  <data name="ShutdownText" xml:space="preserve">
    <value>シャットダウン</value>
    <comment>Shutdown entry in the shutdown menu</comment>
  </data>
  <data name="BackButtonContent" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="CancelButtonContent" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ConnectAutomaticallyText" xml:space="preserve">
    <value>自動的に接続</value>
  </data>
  <data name="ConnectButtonContent" xml:space="preserve">
    <value>接続</value>
  </data>
  <data name="DirectConnectionsText" xml:space="preserve">
    <value>直接接続</value>
  </data>
  <data name="EthernetText" xml:space="preserve">
    <value>イーサネット</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkConnectingMessageText" xml:space="preserve">
    <value>ネットワークの要件をチェックしています</value>
  </data>
  <data name="NetworkPasswordPromptText" xml:space="preserve">
    <value>ネットワーク セキュリティ キーを入力してください</value>
  </data>
  <data name="NextButtonContent" xml:space="preserve">
    <value>次へ</value>
  </data>
  <data name="NoNetworksText" xml:space="preserve">
    <value>見つかりません</value>
  </data>
  <data name="OOBEIntroText" xml:space="preserve">
    <value>いくつか基本的なことを確認してみましょう。</value>
  </data>
  <data name="OOBELanguageSelectText" xml:space="preserve">
    <value>言語を選択してください</value>
  </data>
  <data name="OOBENetworkTitleText" xml:space="preserve">
    <value>接続しましょう</value>
  </data>
  <data name="OOBEWelcomeTitleText" xml:space="preserve">
    <value>Windows 10 IoT Core へようこそ</value>
  </data>
  <data name="Rpi2Name" xml:space="preserve">
    <value>Raspberry Pi 2</value>
    <comment>Board name</comment>
  </data>
  <data name="Rpi3Name" xml:space="preserve">
    <value>Raspberry Pi 3</value>
    <comment>Board name</comment>
  </data>
  <data name="DB410Name" xml:space="preserve">
    <value>DragonBoard 410c</value>
    <comment>Board name</comment>
  </data>
  <data name="SkipStepText" xml:space="preserve">
    <value>この手順をスキップする</value>
  </data>
  <data name="WifiText" xml:space="preserve">
    <value>Wi-Fi</value>
    <comment>Label for Wi-Fi list in options page</comment>
  </data>
  <data name="StartDevelopingText" xml:space="preserve">
    <value> にアクセスしてください</value>
    <comment>Part of "Visit www.windowsondevices.com to start developing"</comment>
  </data>
  <data name="VisitText" xml:space="preserve">
    <value>開発を始めるには、</value>
    <comment>Part of "Visit www.windowsondevices.com to start developing"</comment>
  </data>
  <data name="WindowsOnDevicesUrlText" xml:space="preserve">
    <value> www.windowsondevices.com</value>
    <comment>Part of "Visit www.windowsondevices.com to start developing"</comment>
  </data>
  <data name="KeyboardTitleText" xml:space="preserve">
    <value>キーボード レイアウト</value>
    <comment>Field label</comment>
  </data>
  <data name="LanguageTitleText" xml:space="preserve">
    <value>言語</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkConnectedText" xml:space="preserve">
    <value>接続済み</value>
  </data>
  <data name="NetworkPreferencesText" xml:space="preserve">
    <value>ネットワークと Wi-Fi</value>
  </data>
  <data name="BluetoothPreferencesText" xml:space="preserve">
    <value>Bluetooth</value>
    <comment>Label for Setting item tp control Bluetooth pairing</comment>
  </data>
  <data name="SettingsPreferencesText" xml:space="preserve">
    <value>基本設定</value>
  </data>
  <data name="SettingsTitleText" xml:space="preserve">
    <value>デバイスの設定</value>
  </data>
  <data name="TimeZoneTitleText" xml:space="preserve">
    <value>タイム ゾーン</value>
  </data>
  <data name="DeviceInfoText" xml:space="preserve">
    <value>デバイス情報</value>
  </data>
  <data name="TutorialsText" xml:space="preserve">
    <value>チュートリアル</value>
    <comment>Text under the Tutorials button on the top bar</comment>
  </data>
  <data name="ConnectedDevicesText" xml:space="preserve">
    <value>接続中のデバイス</value>
  </data>
  <data name="Ipv4Text" xml:space="preserve">
    <value>IPv4</value>
    <comment>Field label</comment>
  </data>
  <data name="Ipv6Text" xml:space="preserve">
    <value>IPv6</value>
    <comment>Field label</comment>
  </data>
  <data name="MainPageIPAddressText" xml:space="preserve">
    <value>IP アドレス</value>
    <comment>Field label</comment>
  </data>
  <data name="NetworkInformationText" xml:space="preserve">
    <value>ネットワーク情報</value>
  </data>
  <data name="StatusText" xml:space="preserve">
    <value>状態</value>
    <comment>Status of the network connection (e.g. not connected, limited, etc.)</comment>
  </data>
  <data name="TutorialGetCodingDescriptionText" xml:space="preserve">
    <value>PC からリモートでコードを記述する方法</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetCodingTitleText" xml:space="preserve">
    <value>コーディング</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetConnectedDescriptionText" xml:space="preserve">
    <value>デバイスをインターネットと PC に接続</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetConnectedTitleText" xml:space="preserve">
    <value>接続する</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetStartedDescriptionText" xml:space="preserve">
    <value>Windows 10 IoT Core の紹介</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialGetStartedTitleText" xml:space="preserve">
    <value>開始する</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHeaderText" xml:space="preserve">
    <value>Windows 10 IoT Core の活用方法</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHelloBlinkyDescriptionText" xml:space="preserve">
    <value>デバイスでの LED の切り替え</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialHelloBlinkyTitleText" xml:space="preserve">
    <value>LED の点滅</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialTitleText" xml:space="preserve">
    <value>接続と開発に役立つリソースとツール</value>
  </data>
  <data name="TutorialBlinkyBody1Text" xml:space="preserve">
    <value>ボードを使って一番初めに行う最も基本的なことは点滅です。</value>
  </data>
  <data name="TutorialBlinkyBody2Text" xml:space="preserve">
    <value>「はじめに」セクションで説明したとおり、ソース コードはすべてオープン ソースであり、www.windowsondevices.com からダウンロードできます (IoTCoreDefaultApp を探してみてください)。</value>
  </data>
  <data name="TutorialBlinkyBody3Text" xml:space="preserve">
    <value>セットアップは必要ありません。[開始] を押すだけです。</value>
  </data>
  <data name="TutorialBlinkyBody4Text" xml:space="preserve">
    <value>点滅の頻度を変更することもできます。友だちをたくさん集めてデバイスの周りでダンス パーティーをしてみるのもいいですね。</value>
  </data>
  <data name="TutorialBlinkyBody5Text" xml:space="preserve">
    <value>免責事項: ボードで LED を点滅させてレイヴ パーティーなどを開催した結果発生したいかなる損害にも Microsoft は責任を負いません。</value>
  </data>
  <data name="TutorialBlinkyBody6Text_Rpi3" xml:space="preserve">
    <value>Raspberry Pi 3 の場合は、LED を GPIO ピン 5 に接続します。</value>
  </data>
  <data name="TutorialBlinkyBody6Text_Dragonboard" xml:space="preserve">
    <value>DragonBoard 410c の場合は、LED を GPIO ピン 115 に接続します。</value>
  </data>
  <data name="TutorialBlinkyTitle1Text" xml:space="preserve">
    <value>LED の点滅</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="TutorialBlinkyTitle2Text" xml:space="preserve">
    <value>ボードを点滅させる</value>
    <comment>Tutorial titles and subtitles</comment>
  </data>
  <data name="MainPageOSVersionText" xml:space="preserve">
    <value>OS バージョン</value>
    <comment>Label for OS Version field in main page</comment>
  </data>
  <data name="OSVersionNotAvailable" xml:space="preserve">
    <value>利用不可</value>
    <comment>Text shown when we cannot retrieve the OS Version</comment>
  </data>
  <data name="RefreshContent" xml:space="preserve">
    <value>最新の情報に更新</value>
    <comment>Refresh button</comment>
  </data>
  <data name="Tutorial.GetStarted.001.620x400.image" xml:space="preserve">
    <value>Assets/Tutorials/GetStarted-{0}.jpg</value>
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetStarted.002.title" xml:space="preserve">
    <value>作業の開始</value>
  </data>
  <data name="Tutorial.GetStarted.003.subtitle" xml:space="preserve">
    <value>Windows 10 IoT Core へようこそ</value>
  </data>
  <data name="Tutorial.GetStarted.004.h1" xml:space="preserve">
    <value>はじめに</value>
  </data>
  <data name="Tutorial.GetStarted.005.p" xml:space="preserve">
    <value>おめでとうございます。ボードがセットアップされ、Windows 10 IoT Core を使用する準備が整いました。IoT Core は、デバイスを作成するために設計された軽量のオペレーティング システムです。IoT Core には、デバイスを接続し、すぐに動かすために必要なツールがすべて用意されています。アイデアをできる限りすばやく実現できるようにすることを目指しています。</value>
  </data>
  <data name="Tutorial.GetStarted.006.p" xml:space="preserve">
    <value>チュートリアル、ドキュメント、ヘルプの詳細については、www.windowsondevices.com にアクセスしてください。</value>
  </data>
  <data name="Tutorial.GetStarted.007.h1" xml:space="preserve">
    <value>コードを取得する方法</value>
  </data>
  <data name="Tutorial.GetStarted.008.p" xml:space="preserve">
    <value>Windows 10 IoT Core では、PC の能力を利用して、プロジェクトを構築します。</value>
  </data>
  <data name="Tutorial.GetStarted.009.p" xml:space="preserve">
    <value>コーディングはすべて Visual Studio を使用してリモートで実行します。コードは、テストのためや、出荷準備が整ったときに、デバイスに簡単にプッシュできます。</value>
  </data>
  <data name="Tutorial.GetStarted.010.h1" xml:space="preserve">
    <value>必要なもの</value>
  </data>
  <data name="Tutorial.GetStarted.011.ul" xml:space="preserve">
    <value>Windows 10 PC</value>
  </data>
  <data name="Tutorial.GetStarted.012.ul" xml:space="preserve">
    <value>インターネット接続</value>
  </data>
  <data name="Tutorial.GetStarted.013.ul" xml:space="preserve">
    <value>ボード</value>
  </data>
  <data name="Tutorial.GetStarted.014.ul" xml:space="preserve">
    <value>Visual Studio 2015</value>
  </data>
  <data name="Tutorial.GetStarted.014a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetStarted.015.p" xml:space="preserve">
    <value>詳細については、[コードを取得] チュートリアルをクリックしてください</value>
  </data>
  <data name="Tutorial.GetStarted.016.h1" xml:space="preserve">
    <value>スタート ボタンはどこ?!</value>
  </data>
  <data name="Tutorial.GetStarted.017.p" xml:space="preserve">
    <value>Windows 10 IoT Core は、非常に軽量で、アプリケーションの作成が完了した後はユーザーに認識されないように設計されています。そのため、シェルやスタート ボタンがありません。ボタン、ナビゲーション、UI はすべて開発者が用意する必要があります。</value>
  </data>
  <data name="Tutorial.GetStarted.018.p" xml:space="preserve">
    <value>心配しないでください。お手伝いします。</value>
  </data>
  <data name="Tutorial.GetStarted.019.p" xml:space="preserve">
    <value>このアプリケーションは完全にオープン ソースです。アプリケーションのすべてがオープン ソース化されていて、www.windowsondevices.com で確認できます。</value>
  </data>
  <data name="Tutorial.GetStarted.020.p" xml:space="preserve">
    <value>これは、独自のアプリケーションを構築する際のテンプレートとしてご自由にお使いください</value>
  </data>
  <data name="Tutorial.GetStarted.021.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.001.620x400.image" xml:space="preserve">
    <value>Assets/Tutorials/GetConnected-{0}.jpg</value>
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.002.title" xml:space="preserve">
    <value>接続</value>
  </data>
  <data name="Tutorial.GetConnected.003.subtitle" xml:space="preserve">
    <value>モノのインターネット (IoT) はインターネットが利用できないと意味がないので、接続してみましょう。</value>
  </data>
  <data name="Tutorial.GetConnected.004.p" xml:space="preserve">
    <value>接続方法には、イーサネット、Wi-Fi、インターネット接続の共有 (ICS) の 3 つがあります</value>
  </data>
  <data name="Tutorial.GetConnected.005.h1" xml:space="preserve">
    <value>イーサネット</value>
  </data>
  <data name="Tutorial.GetConnected.006.p" xml:space="preserve">
    <value>最も簡単で最も確実な接続方法は、イーサネットを使用することです。ボードにイーサネット ケーブルの一方を接続して、もう一方をルーターかネットワーク スイッチに接続してください。</value>
  </data>
  <data name="Tutorial.GetConnected.007.h1" xml:space="preserve">
    <value>Wi-Fi</value>
  </data>
  <data name="Tutorial.GetConnected.008.p" xml:space="preserve">
    <value>Wi-Fi が組み込まれているボードもありますが、ほとんどはそうではありません。ボードに Wi-Fi が組み込まれていない場合は、USB Wi-Fi アダプターを購入して、ボードに接続する必要があります。遠慮せずにお店に買いにお出かけください。お待ちしております。</value>
  </data>
  <data name="Tutorial.GetConnected.009.p" xml:space="preserve">
    <value>購入したら、接続しましょう!</value>
  </data>
  <data name="Tutorial.GetConnected.010.620x350.image" xml:space="preserve">
    <value>Assets/Tutorials/GetConnected-004.jpg</value>
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.011.p" xml:space="preserve">
    <value>画面の右上にあるのは "設定ギア" です。ギアをクリックし、[ネットワークと Wi-Fi] に移動します。そこでは、ローカル ネットワークに接続できます。</value>
  </data>
  <data name="Tutorial.GetConnected.012.h1" xml:space="preserve">
    <value>インターネット接続の共有</value>
  </data>
  <data name="Tutorial.GetConnected.014.ul" xml:space="preserve">
    <value>開発コンピューターの空いているイーサネット ポート。追加の PCI イーサネット カードや USB-to-Ethernet ドングルを使用できます。</value>
  </data>
  <data name="Tutorial.GetConnected.015.ul" xml:space="preserve">
    <value>開発コンピューターと IoT Core デバイスを接続するイーサネット ケーブル。</value>
  </data>
  <data name="Tutorial.GetConnected.015a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.016.p" xml:space="preserve">
    <value>以下の手順に従って、PC のインターネット接続の共有 (ICS) を有効にします</value>
  </data>
  <data name="Tutorial.GetConnected.017.ul" xml:space="preserve">
    <value>Windows ボタンを右クリックして、[コントロール パネル] をクリックするか、コマンド プロンプト ウィンドウを開いて、「control.exe」と入力して、コントロール パネルを開きます</value>
  </data>
  <data name="Tutorial.GetConnected.018.ul" xml:space="preserve">
    <value>コントロール パネルの検索ボックスに、「アダプター」と入力します</value>
  </data>
  <data name="Tutorial.GetConnected.019.ul" xml:space="preserve">
    <value>[ネットワークと共有センター] の [ネットワーク接続の表示] をクリックします</value>
  </data>
  <data name="Tutorial.GetConnected.020.ul" xml:space="preserve">
    <value>共有する接続を右クリックし、[プロパティ] をクリックします</value>
  </data>
  <data name="Tutorial.GetConnected.021.ul" xml:space="preserve">
    <value>[共有] タブをクリックし、[ネットワークのほかのユーザーに、このコンピューターのインターネット接続をとおしての接続を許可する] チェック ボックスをオンにします。</value>
  </data>
  <data name="Tutorial.GetConnected.021a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.022.p" xml:space="preserve">
    <value>PC で ICS が有効になったので、Windows 10 IoT Core デバイスを PC に直接接続できます。接続するには、余っているイーサネット ケーブルの一方の端を PC の空いているイーサネット ポートに挿し、ケーブルのもう一方の端を IoT Core デバイスのイーサネット ポートに挿します。</value>
  </data>
  <data name="Tutorial.GetConnected.023.p" xml:space="preserve">
    <value>メモ:</value>
  </data>
  <data name="Tutorial.GetConnected.024.ul" xml:space="preserve">
    <value>ネットワーク接続が 1 つだけの場合は、[共有] タブを使用できません。</value>
  </data>
  <data name="Tutorial.GetConnected.024a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.025.h1" xml:space="preserve">
    <value>問題が発生した場合</value>
  </data>
  <data name="Tutorial.GetConnected.026.p" xml:space="preserve">
    <value>問題をデバッグする際に役立つ高度なネットワーク診断機能をメイン ページにいくつか追加しました。サポートが必要な場合は、www.windowsondevices.com にアクセスしてください</value>
  </data>
  <data name="Tutorial.GetConnected.027.620x400.image" xml:space="preserve">
    <value>Assets/Tutorials/GetConnected-006.jpg</value>
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetConnected.028.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetCoding.001.620x400.image" xml:space="preserve">
    <value>Assets/Tutorials/GetCoding.jpg</value>
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetCoding.002.title" xml:space="preserve">
    <value>コードを取得</value>
  </data>
  <data name="Tutorial.GetCoding.003.subtitle" xml:space="preserve">
    <value>Windows 10 IoT Core では、PC の能力を利用して、プロジェクトを構築します。</value>
  </data>
  <data name="Tutorial.GetCoding.004.p" xml:space="preserve">
    <value>コーディングはすべて Visual Studio を使用してリモートで実行します。コードは、テストのためや、出荷準備が整ったときに、デバイスに簡単にプッシュできます。</value>
  </data>
  <data name="Tutorial.GetCoding.005.h1" xml:space="preserve">
    <value>必要なもの</value>
  </data>
  <data name="Tutorial.GetCoding.006.ul" xml:space="preserve">
    <value>Windows 10 PC</value>
  </data>
  <data name="Tutorial.GetCoding.007.ul" xml:space="preserve">
    <value>インターネット接続</value>
  </data>
  <data name="Tutorial.GetCoding.008.ul" xml:space="preserve">
    <value>ボード</value>
  </data>
  <data name="Tutorial.GetCoding.009.ul" xml:space="preserve">
    <value>Visual Studio 2015</value>
  </data>
  <data name="Tutorial.GetCoding.009a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetCoding.010.h1" xml:space="preserve">
    <value>PC での Visual Studio 2015 のセットアップ</value>
  </data>
  <data name="Tutorial.GetCoding.012.ul" xml:space="preserve">
    <value>Windows 10 のインストール</value>
  </data>
  <data name="Tutorial.GetCoding.013.ul" xml:space="preserve">
    <value>Visual Studio 2015 をインストールします。インストーラーが起動したら [カスタム] オプションを選択し、Windows 10 ツールをインストールするオプションを選択します。</value>
  </data>
  <data name="Tutorial.GetCoding.014.ul" xml:space="preserve">
    <value>ドライバーを開発する場合は、WDK をインストールします。</value>
  </data>
  <data name="Tutorial.GetCoding.016a.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="Tutorial.GetCoding.019.br" xml:space="preserve">
    <value />
    <comment>Please do NOT localize this string</comment>
  </data>
  <data name="NetworkConnectivityLevel_ConstrainedInternetAccess" xml:space="preserve">
    <value>制限付きインターネット アクセス</value>
  </data>
  <data name="NetworkConnectivityLevel_InternetAccess" xml:space="preserve">
    <value>ローカルとインターネット アクセス</value>
  </data>
  <data name="NetworkConnectivityLevel_LocalAccess" xml:space="preserve">
    <value>ローカル ネットワーク アクセスのみ</value>
  </data>
  <data name="NetworkConnectivityLevel_None" xml:space="preserve">
    <value>接続がありません</value>
  </data>
  <data name="NoInternetConnection" xml:space="preserve">
    <value>&lt;インターネット接続がありません&gt;</value>
    <comment>Used in the main page under "IP address"</comment>
  </data>
  <data name="DefaultLanguageTimeoutText" xml:space="preserve">
    <value>既定の言語を自動的に選択しています...</value>
  </data>
  <data name="BlinkyStart" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="BlinkyStop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="BlinkyStopped" xml:space="preserve">
    <value>停止</value>
    <comment>This message is shown when the user turn off the slider to make the LED blink</comment>
  </data>
  <data name="GPIOPinInitializedCorrectly" xml:space="preserve">
    <value>GPIO ピンの初期化が正常に完了しました。</value>
  </data>
  <data name="NoGPIOController" xml:space="preserve">
    <value>このデバイスには GPIO コントローラーがありません。</value>
  </data>
  <data name="ProblemsInitializingGPIOPin" xml:space="preserve">
    <value>GPIO ピンの初期化で問題が発生しました。</value>
  </data>
  <data name="BluetoothAttemptingToPairFormat" xml:space="preserve">
    <value>{0} ({1}) とのペアリングを試みています</value>
    <comment>Format string for message displayed when pairing attempt starts</comment>
  </data>
  <data name="BluetoothConfirmOnlyFormat" xml:space="preserve">
    <value>{0}({1}) とのペアリング</value>
    <comment>Format string for message displayed when ConfirmOnly ceremony is invoked</comment>
  </data>
  <data name="BluetoothConfirmPinMatchFormat" xml:space="preserve">
    <value>デバイスに表示されている PIN は、{0} と一致しますか?</value>
    <comment>Format string for message displayed when ConfirmPinMatch ceremony is invoked</comment>
  </data>
  <data name="BluetoothDisplayPinFormat" xml:space="preserve">
    <value>ペアリング先デバイスで、この PIN を入力してください: {0}</value>
    <comment>Format string for message displayed when DisplayPin ceremony is invoked</comment>
  </data>
  <data name="BluetoothInboundRegistrationAlreadyDoneFormat" xml:space="preserve">
    <value>受信ペアリング用に既に登録されている、サポートされているセレモニー: {0}</value>
    <comment>Format string for message displayed when Inbound pairing handler registration already done</comment>
  </data>
  <data name="BluetoothInboundRegistrationFailed" xml:space="preserve">
    <value>受信ペアリング用に登録できませんでした。</value>
    <comment>Message displayed when Inbound pairing handler registration fails</comment>
  </data>
  <data name="BluetoothInboundRegistrationSucceededFormat" xml:space="preserve">
    <value>受信ペアリング用に正しく登録されている、サポートされているセレモニー: {0}</value>
    <comment>Format string for message displayed when Inbound pairing handler registration succeeds</comment>
  </data>
  <data name="BluetoothPairingFailureFormat" xml:space="preserve">
    <value>ペアリングの結果は {0} でした: {1} ({2}) とペアリングできませんでした</value>
    <comment>Format string for message displayed when pairing attempt fails</comment>
  </data>
  <data name="BluetoothPairingSuccessFormat" xml:space="preserve">
    <value>{0} ({1}) とのペアリングに成功しました</value>
    <comment>Format string for message displayed when pairing attempt succeeds</comment>
  </data>
  <data name="BluetoothStartedWatching" xml:space="preserve">
    <value>このデバイスは、他の Bluetooth デバイスを検索しています。他の Bluetooth デバイスからこのデバイスを検出することもできます。</value>
    <comment>Message display when "Start Watcher" button is pressed</comment>
  </data>
  <data name="BluetoothStoppedWatching" xml:space="preserve">
    <value>Bluetooth デバイスの監視を停止しました</value>
    <comment>Message display when "Stop Watcher" button is pressed</comment>
  </data>
  <data name="BluetoothUnpairingFailureFormat" xml:space="preserve">
    <value>ペアリング解除の結果は {0} でした: {1} ({2}) からペアリングを解除できませんでした</value>
    <comment>Format string for message displayed when unpairing attempt fails</comment>
  </data>
  <data name="BluetoothUnpairingSuccessFormat" xml:space="preserve">
    <value>{0} ({1}) から正常にペアリングを解除しました</value>
    <comment>Format string for message displayed when unpairing attempt succeeds</comment>
  </data>
  <data name="PinLabelTextBox.Text" xml:space="preserve">
    <value>PIN を入力してください:</value>
    <comment>Message on flyout control for PIN entry for ProvidePin ceremony</comment>
  </data>
  <data name="BluetoothPairButtonContent" xml:space="preserve">
    <value>ペアリング</value>
    <comment>Text displayed on the button to pair Bluetooth list item</comment>
  </data>
  <data name="BluetoothUnpairButtonContent" xml:space="preserve">
    <value>ペアリングの解除</value>
    <comment>Text displayed on the button to unpair Bluetooth list item</comment>
  </data>
  <data name="BluetoothDeviceStatePairedText" xml:space="preserve">
    <value>ペアリング済み</value>
  </data>
  <data name="BluetoothDeviceStateReadyToPairText" xml:space="preserve">
    <value>ペアリングの準備完了</value>
  </data>
  <data name="BluetoothManageDevicesText" xml:space="preserve">
    <value>Bluetooth デバイスの管理</value>
  </data>
  <data name="BluetoothWatcherToggleLabel" xml:space="preserve">
    <value>Bluetooth</value>
    <comment>Label text for Bluetooth watcher toggle switch</comment>
  </data>
  <data name="BluetoothNoDeviceAvailableFormat" xml:space="preserve">
    <value>このコンピューターで使用可能な Bluetooth アダプターが見つかりません:
{0}</value>
    <comment>Message displayed on systems which do not have a Bluetooth adapter. The new line before {0} is deliberate and should be kept</comment>
  </data>
  <data name="BluetoothEnterPINText" xml:space="preserve">
    <value>PIN を入力してください:</value>
  </data>
  <data name="BluetoothDeviceStateUnknownText" xml:space="preserve">
    <value>不明な状態</value>
  </data>
  <data name="BluetoothInboundPairingRequestFormat" xml:space="preserve">
    <value>受信要求: {0}
{1}</value>
    <comment>Format for message displayed when an inbounbd pairing request is received</comment>
  </data>
  <data name="EnableScreensaverText" xml:space="preserve">
    <value>スクリーンセーバー</value>
    <comment>Toggle switch for enabling the screensaver</comment>
  </data>
  <data name="NoDeviceName" xml:space="preserve">
    <value>&lt;デバイス名がありません&gt;</value>
    <comment>This is shown when we fail to retrieve a valid device name (very strange case)</comment>
  </data>
  <data name="CommandLineText" xml:space="preserve">
    <value>コマンド ライン</value>
    <comment>Title for command line page</comment>
  </data>
  <data name="CommandLinePlaceholderText" xml:space="preserve">
    <value>{0}&gt; コマンド ラインを入力してください</value>
    <comment>Placeholder for command line input text box</comment>
  </data>
  <data name="ClearPageText" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="CdNotSupported" xml:space="preserve">
    <value>ディレクトリの変更は現在サポートされていません。コマンドの完全パスを使用してください。</value>
  </data>
  <data name="CmdNotEnabled" xml:space="preserve">
    <value>お使いのデバイスではコマンド ライン プロセッサを実行できません。
有効にするには、お使いのデバイスで、管理者として次のコマンドを実行してください:

    reg ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\EmbeddedMode\ProcessLauncher" /v AllowedExecutableFilesList /t REG_MULTI_SZ /d "c:\windows\system32\cmd.exe\0"

または、下のボタンをクリックして管理者のユーザー名とパスワードを入力し、コマンドを実行してください。

    </value>
    <comment>New lines need to be preserved</comment>
  </data>
  <data name="ExecAsDefaultAccount" xml:space="preserve">
    <value>DefaultAccount としてコマンドを実行中
    </value>
  </data>
  <data name="CloseText" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="EnableCmdText" xml:space="preserve">
    <value>コマンド ライン プロセッサを有効にする</value>
  </data>
  <data name="UsernameText" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="PasswordText" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="CmdTextEnabledSuccess" xml:space="preserve">
    <value>お使いのデバイスで、コマンド ライン プロセッサ (cmd.exe) が有効になりました。</value>
  </data>
  <data name="CmdTextEnabledFailure" xml:space="preserve">
    <value>お使いのデバイスで、コマンド ライン プロセッサ (cmd.exe) を有効にできませんでした。状態 = {0}</value>
  </data>
  <data name="DisconnectButtonContent" xml:space="preserve">
    <value>切断</value>
    <comment>This disconnects the connected network</comment>
  </data>
  <data name="VirtualNetworkAdapter" xml:space="preserve">
    <value>仮想ネットワーク アダプター</value>
  </data>
  <data name="CortanaAboutMeText" xml:space="preserve">
    <value>ユーザー情報</value>
    <comment>Button launches Cortana's "About Me" page to manage certain Cortana Settings</comment>
  </data>
  <data name="CortanaTitleText" xml:space="preserve">
    <value>Cortana 設定の管理</value>
    <comment>Title of Cortana Settings Management Page</comment>
  </data>
  <data name="CortanaPreferencesText" xml:space="preserve">
    <value>Cortana</value>
    <comment>Cortana Preferences on left side of settings screen</comment>
  </data>
  <data name="CortanaVoiceActivationText" xml:space="preserve">
    <value>「コルタナさん」と言ったら Cortana が応答するようにする</value>
    <comment>Toggle switch for enabling voice activation.</comment>
  </data>
</root>