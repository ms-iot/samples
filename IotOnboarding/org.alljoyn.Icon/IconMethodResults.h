//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace alljoyn { namespace Icon {

ref class IconConsumer;

public ref class IconGetUrlResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Platform::String^ OutputArg
    {
        Platform::String^ get() { return m_interfaceMemberOutputArg; }
    internal:
        void set(_In_ Platform::String^ value) { m_interfaceMemberOutputArg = value; }
    }
    
    static IconGetUrlResult^ CreateSuccessResult(_In_ Platform::String^ interfaceMemberOutputArg)
    {
        auto result = ref new IconGetUrlResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->OutputArg = interfaceMemberOutputArg;
        return result;
    }
    
    static IconGetUrlResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new IconGetUrlResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    Platform::String^ m_interfaceMemberOutputArg;
};

public ref class IconGetContentResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Windows::Foundation::Collections::IVector<byte>^ OutputArg
    {
        Windows::Foundation::Collections::IVector<byte>^ get() { return m_interfaceMemberOutputArg; }
    internal:
        void set(_In_ Windows::Foundation::Collections::IVector<byte>^ value) { m_interfaceMemberOutputArg = value; }
    }
    
    static IconGetContentResult^ CreateSuccessResult(_In_ Windows::Foundation::Collections::IVector<byte>^ interfaceMemberOutputArg)
    {
        auto result = ref new IconGetContentResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->OutputArg = interfaceMemberOutputArg;
        return result;
    }
    
    static IconGetContentResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new IconGetContentResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    Windows::Foundation::Collections::IVector<byte>^ m_interfaceMemberOutputArg;
};

public ref class IconJoinSessionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property IconConsumer^ Consumer
    {
        IconConsumer^ get() { return m_consumer; }
    internal:
        void set(_In_ IconConsumer^ value) { m_consumer = value; }
    };

private:
    int32 m_status;
    IconConsumer^ m_consumer;
};

public ref class IconGetVersionResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint16 Version
    {
        uint16 get() { return m_value; }
    internal:
        void set(_In_ uint16 value) { m_value = value; }
    }

    static IconGetVersionResult^ CreateSuccessResult(_In_ uint16 value)
    {
        auto result = ref new IconGetVersionResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Version = value;
        return result;
    }

    static IconGetVersionResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new IconGetVersionResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    uint16 m_value;
};

public ref class IconGetMimeTypeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property Platform::String^ MimeType
    {
        Platform::String^ get() { return m_value; }
    internal:
        void set(_In_ Platform::String^ value) { m_value = value; }
    }

    static IconGetMimeTypeResult^ CreateSuccessResult(_In_ Platform::String^ value)
    {
        auto result = ref new IconGetMimeTypeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->MimeType = value;
        return result;
    }

    static IconGetMimeTypeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new IconGetMimeTypeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    Platform::String^ m_value;
};

public ref class IconGetSizeResult sealed
{
public:
    property int32 Status
    {
        int32 get() { return m_status; }
    internal:
        void set(_In_ int32 value) { m_status = value; }
    }

    property uint32 Size
    {
        uint32 get() { return m_value; }
    internal:
        void set(_In_ uint32 value) { m_value = value; }
    }

    static IconGetSizeResult^ CreateSuccessResult(_In_ uint32 value)
    {
        auto result = ref new IconGetSizeResult();
        result->Status = Windows::Devices::AllJoyn::AllJoynStatus::Ok;
        result->Size = value;
        return result;
    }

    static IconGetSizeResult^ CreateFailureResult(_In_ int32 status)
    {
        auto result = ref new IconGetSizeResult();
        result->Status = status;
        return result;
    }

private:
    int32 m_status;
    uint32 m_value;
};

} } } 
